# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: gustavopiovesan
# "service" is the name of this project. This will also be added to your AWS resource names.
service: asynchronous-report-generation-aws

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: dev
  memorySize: 128
  environment:
    DYNAMO_LEADS_TABLE: !Ref LeadsTable
    SQS_GENERATE_REPORT_QUEUE: !Ref GenerateReportQueue
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Scan
          Resource: !GetAtt LeadsTable.Arn
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: !GetAtt GenerateReportQueue.Arn

package:
  individually: true

build:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    exclude:
      - '@aws-sdk/*'

functions:
  populateDynamo:
    handler: src/functions/populateDynamo.handler
    timeout: 25
    events:
      - httpApi:
          path: /populate-dynamo
          method: POST
  generateReport:
    handler: src/functions/generateReport.handler
    events:
      - httpApi:
          path: /generate-report
          method: POST

resources:
  Resources:
    LeadsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: LeadsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

    GenerateReportQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: GenerateReportQueue
        ReceiveMessageWaitTimeSeconds: 20
        VisibilityTimeout: 180
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt GenerateReportDLQ.Arn
          maxReceiveCount: 3

    GenerateReportDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: GenerateReportDLQ
        MessageRetentionPeriod: 1209600 # 14 days
